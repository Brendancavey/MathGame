@model MathGame.Models.ViewModels.QuestionModel
@{
    ViewData["Title"] = "Random";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var endTime = DateTime.Now.AddSeconds(10);
    int timeRemaining = Convert.ToInt32(TimeSpan.FromTicks(endTime.Ticks - DateTime.Now.Ticks).TotalSeconds);
}
<h1>Time Remaining: <span id="secRemaining"></span></h1>
<h1>Question</h1>

<h3>@Model.question.getQuestion()</h3>
<h3 style="text-align:right">Score @Model.user.score</h3>

<form asp-action="Random" asp-controller="MathQuestion" method="post">
    <input type="hidden" asp-for="question.num1" value=@Model.question.num1/>
    <input type="hidden" asp-for="question.num2" value=@Model.question.num2/>
    <input type="hidden" asp-for="question.answer" value=@Model.question.answer/>
    <input type="hidden" asp-for="user" value=@Model.user/>
    <input type="hidden" asp-for="user.score" value=@Model.user.score/>
    <label>Answer:</label>
    <input asp-for="question.user_answer" autofocus="autofocus" />
    <button type="submit" class="btn btn-info" id="submit" value ="submit" name="submit">Submit</button>
</form>
<script>
    var remainingSeconds = @timeRemaining;
    function startTick(){
        document.getElementById('secRemaining').innerText = remainingSeconds;

        var _tick = setInterval(function () { //exectute function every 1000 milisecs
            remainingSeconds = remainingSeconds-1;
            document.getElementById('secRemaining').innerText = remainingSeconds;

        }, 1000); 
    }
    startTick();
</script>
@*
    This is a comment
*@
